# Configuração Apache com SSL para Just Dance Event Hub
# Substitui a configuração do Nginx

# Carrega módulos necessários
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
LoadModule headers_module modules/mod_headers.so
LoadModule deflate_module modules/mod_deflate.so
LoadModule security2_module modules/mod_security2.so
LoadModule evasive24_module modules/mod_evasive24.so

# Configurações globais
ServerTokens Prod
ServerSignature Off
Timeout 60
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5

# Configurações de segurança globais
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options DENY
Header always set X-XSS-Protection "1; mode=block"
Header always set Referrer-Policy "strict-origin-when-cross-origin"
Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"

# Ocultar versão do Apache
Header unset Server
Header always set Server "WebServer"

# Configuração de compressão
<IfModule mod_deflate.c>
    SetOutputFilter DEFLATE
    SetEnvIfNoCase Request_URI \
        \.(?:gif|jpe?g|png|ico|woff|woff2|ttf|eot)$ no-gzip dont-vary
    SetEnvIfNoCase Request_URI \
        \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
    
    # Comprimir tipos específicos
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
EndIfModule>

# Configuração de rate limiting (mod_evasive)
<IfModule mod_evasive24.c>
    DOSHashTableSize    2048
    DOSPageCount        10
    DOSPageInterval     1
    DOSSiteCount        50
    DOSSiteInterval     1
    DOSBlockingPeriod   600
    DOSLogDir           "C:/logs/just-dance-hub/dos"
    DOSEmailNotify      admin@seudominio.com
    DOSWhitelist        127.0.0.1
    DOSWhitelist        ::1
EndIfModule>

# Configuração ModSecurity (WAF)
<IfModule mod_security2.c>
    SecRuleEngine On
    SecRequestBodyAccess On
    SecResponseBodyAccess Off
    SecRequestBodyLimit 13107200
    SecRequestBodyNoFilesLimit 131072
    SecRequestBodyInMemoryLimit 131072
    SecRequestBodyLimitAction Reject
    SecPcreMatchLimit 1000
    SecPcreMatchLimitRecursion 1000
    SecTmpDir "C:/temp/modsec"
    SecDataDir "C:/logs/just-dance-hub/modsec"
    SecAuditEngine RelevantOnly
    SecAuditLogRelevantStatus "^(?:5|4(?!04))"
    SecAuditLogParts ABIJDEFHZ
    SecAuditLogType Serial
    SecAuditLog "C:/logs/just-dance-hub/modsec_audit.log"
    SecArgumentSeparator &
    SecCookieFormat 0
    SecUnicodeMapFile unicode.mapping 20127
    
    # Regras básicas de segurança
    SecRule ARGS "@detectSQLi" \
        "id:1001,phase:2,block,msg:'SQL Injection Attack Detected',logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',severity:2"
    
    SecRule ARGS "@detectXSS" \
        "id:1002,phase:2,block,msg:'XSS Attack Detected',logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',severity:2"
    
    SecRule REQUEST_HEADERS:User-Agent "@pmFromFile blacklist-user-agents.txt" \
        "id:1003,phase:1,block,msg:'Malicious User Agent Detected'"
EndIfModule>

# Bloquear arquivos sensíveis
<FilesMatch "\.(env|log|sql|bak|backup|old|tmp|temp|config|ini|conf)$">
    Require all denied
EndFilesMatch>

<DirectoryMatch "/\.(git|svn|hg|bzr)">
    Require all denied
EndDirectoryMatch>

# Bloquear acesso a diretórios específicos
<Directory "C:/opt/just-dance-hub/backend">
    Require all denied
EndDirectory>

<Directory "C:/opt/just-dance-hub/scripts">
    Require all denied
EndDirectory>

# Configuração SSL global
SSLEngine on
SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
SSLHonorCipherOrder off
SSLSessionTickets off
SSLUseStapling on
SSLStaplingCache "shmcb:C:/logs/just-dance-hub/stapling-cache(150000)"

# Virtual Host HTTP (Redirecionamento para HTTPS)
<VirtualHost *:80>
    ServerName seudominio.com
    ServerAlias www.seudominio.com
    
    # Log de acesso e erro
    CustomLog "C:/logs/just-dance-hub/access.log" combined
    ErrorLog "C:/logs/just-dance-hub/error.log"
    
    # Redirecionamento para HTTPS
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
    
    # Permitir apenas Let's Encrypt para renovação
    <Location "/.well-known/acme-challenge/">
        Require all granted
    </Location>
    
    DocumentRoot "C:/opt/just-dance-hub/frontend/build"
    <Directory "C:/opt/just-dance-hub/frontend/build/.well-known">
        Require all granted
    </Directory>
EndVirtualHost>

# Virtual Host HTTPS (Principal)
<VirtualHost *:443>
    ServerName seudominio.com
    ServerAlias www.seudominio.com
    
    # Configuração SSL
    SSLEngine on
    SSLCertificateFile "C:/ssl/seudominio.com/cert.pem"
    SSLCertificateKeyFile "C:/ssl/seudominio.com/privkey.pem"
    SSLCertificateChainFile "C:/ssl/seudominio.com/chain.pem"
    
    # Headers de segurança específicos para HTTPS
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' ws: wss:; media-src 'self'; object-src 'none'; frame-ancestors 'none';"
    
    # Log de acesso e erro
    CustomLog "C:/logs/just-dance-hub/access_ssl.log" combined
    ErrorLog "C:/logs/just-dance-hub/error_ssl.log"
    
    # Documento raiz para arquivos estáticos
    DocumentRoot "C:/opt/just-dance-hub/frontend/build"
    
    # Configuração para arquivos estáticos
    <Directory "C:/opt/just-dance-hub/frontend/build">
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
        
        # Cache para arquivos estáticos
        <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
            ExpiresActive On
            ExpiresDefault "access plus 1 year"
            Header append Cache-Control "public, immutable"
        </FilesMatch>
        
        # Cache para HTML
        <FilesMatch "\.(html|htm)$">
            ExpiresActive On
            ExpiresDefault "access plus 1 hour"
            Header set Cache-Control "public, max-age=3600"
        </FilesMatch>
        
        # Fallback para React Router
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !^/api/
        RewriteCond %{REQUEST_URI} !^/health
        RewriteCond %{REQUEST_URI} !^/ws
        RewriteRule . /index.html [L]
    </Directory>
    
    # Proxy para API Backend
    ProxyPreserveHost On
    ProxyRequests Off
    
    # Rate limiting para API
    <Location "/api/">
        # Configuração mod_evasive específica para API
        DOSPageCount 20
        DOSPageInterval 1
        
        # Proxy para backend
        ProxyPass "http://127.0.0.1:3001/api/"
        ProxyPassReverse "http://127.0.0.1:3001/api/"
        
        # Headers para proxy
        ProxyPassReverse /
        ProxyPassReverseAdjustHeaders On
        
        # Timeout
        ProxyTimeout 30
    </Location>
    
    # Rate limiting mais restritivo para autenticação
    <Location "/api/auth/">
        DOSPageCount 5
        DOSPageInterval 60
        
        ProxyPass "http://127.0.0.1:3001/api/auth/"
        ProxyPassReverse "http://127.0.0.1:3001/api/auth/"
    </Location>
    
    # Health check
    <Location "/health">
        ProxyPass "http://127.0.0.1:3001/health"
        ProxyPassReverse "http://127.0.0.1:3001/health"
    </Location>
    
    # WebSocket proxy
    <Location "/ws">
        ProxyPass "ws://127.0.0.1:8080/"
        ProxyPassReverse "ws://127.0.0.1:8080/"
        
        # Headers específicos para WebSocket
        ProxyPassReverse /
        ProxyPassReverseAdjustHeaders On
        
        # Configurações WebSocket
        RewriteEngine On
        RewriteCond %{HTTP:Upgrade} websocket [NC]
        RewriteCond %{HTTP:Connection} upgrade [NC]
        RewriteRule ^/?(.*) "ws://127.0.0.1:8080/$1" [P,L]
    </Location>
    
    # Bloquear acesso direto a uploads sensíveis
    <Location "/uploads">
        <RequireAll>
            Require all granted
            Require not env malicious
        </RequireAll>
        
        # Verificar tipos de arquivo permitidos
        <FilesMatch "\.(php|pl|py|jsp|asp|sh|cgi)$">
            Require all denied
        </FilesMatch>
    </Location>
EndVirtualHost>

# Virtual Host para desenvolvimento local (opcional)
<VirtualHost 127.0.0.1:80>
    ServerName localhost
    
    DocumentRoot "C:/opt/just-dance-hub/frontend/build"
    
    # Log separado para desenvolvimento
    CustomLog "C:/logs/just-dance-hub/dev_access.log" combined
    ErrorLog "C:/logs/just-dance-hub/dev_error.log"
    
    # Configuração similar ao HTTPS mas sem SSL
    <Directory "C:/opt/just-dance-hub/frontend/build">
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
        
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !^/api/
        RewriteCond %{REQUEST_URI} !^/health
        RewriteCond %{REQUEST_URI} !^/ws
        RewriteRule . /index.html [L]
    </Directory>
    
    # Proxy para desenvolvimento
    <Location "/api/">
        ProxyPass "http://127.0.0.1:3001/api/"
        ProxyPassReverse "http://127.0.0.1:3001/api/"
    </Location>
    
    <Location "/health">
        ProxyPass "http://127.0.0.1:3001/health"
        ProxyPassReverse "http://127.0.0.1:3001/health"
    </Location>
    
    <Location "/ws">
        ProxyPass "ws://127.0.0.1:8080/"
        ProxyPassReverse "ws://127.0.0.1:8080/"
        
        RewriteEngine On
        RewriteCond %{HTTP:Upgrade} websocket [NC]
        RewriteCond %{HTTP:Connection} upgrade [NC]
        RewriteRule ^/?(.*) "ws://127.0.0.1:8080/$1" [P,L]
    </Location>
EndVirtualHost>

# Configurações de log
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" combined_with_time
LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" proxy

# Rotação de logs (configurar logrotate separadamente)
# Configuração de erro personalizada
ErrorDocument 404 /404.html
ErrorDocument 500 /500.html
ErrorDocument 502 /502.html
ErrorDocument 503 /503.html

# Configurações de performance
StartServers 2
MinSpareServers 2
MaxSpareServers 10
MaxRequestWorkers 150
MaxConnectionsPerChild 1000

# Configurações de memória
ServerLimit 16
ThreadLimit 64
ThreadsPerChild 25

# Configurações de timeout
Timeout 300
ProxyTimeout 300
ProxyBadHeader Ignore

# Desabilitar métodos HTTP desnecessários
<Location "/">
    <LimitExcept GET POST PUT DELETE OPTIONS HEAD>
        Require all denied
    </LimitExcept>
EndLocation>

# Configuração para monitoramento
<Location "/server-status">
    SetHandler server-status
    Require ip 127.0.0.1
    Require ip ::1
EndLocation>

<Location "/server-info">
    SetHandler server-info
    Require ip 127.0.0.1
    Require ip ::1
EndLocation>