#!/bin/bash

# üóëÔ∏è Just Dance Event Hub - Script de Desinstala√ß√£o para Ubuntu
# Vers√£o: 1.0.0
# Autor: Just Dance Event Hub Team

set -e  # Parar em caso de erro

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log colorido
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# Banner
echo -e "${RED}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    Just Dance Event Hub                      ‚ïë
‚ïë                   Uninstaller Ubuntu v1.0.0                  ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

# Verificar se est√° rodando como root
if [[ $EUID -eq 0 ]]; then
   error "Este script n√£o deve ser executado como root. Use um usu√°rio com sudo."
fi

# Vari√°veis de configura√ß√£o
APP_NAME="just-dance-hub"
APP_DIR="/opt/$APP_NAME"
SERVICE_USER="$APP_NAME"
DB_NAME="just_dance_hub"

# Fun√ß√£o para confirmar desinstala√ß√£o
confirm_uninstall() {
    echo -e "${RED}‚ö†Ô∏è  ATEN√á√ÉO: Esta a√ß√£o ir√° remover completamente o Just Dance Event Hub!${NC}"
    echo ""
    echo "Ser√£o removidos:"
    echo "  ‚Ä¢ Aplica√ß√£o: $APP_DIR"
    echo "  ‚Ä¢ Usu√°rio do sistema: $SERVICE_USER"
    echo "  ‚Ä¢ Banco de dados: $DB_NAME"
    echo "  ‚Ä¢ Configura√ß√µes do PM2"
    echo "  ‚Ä¢ Configura√ß√µes do Nginx (se instalado)"
    echo "  ‚Ä¢ Logs da aplica√ß√£o"
    echo ""
    
    read -p "Tem certeza que deseja continuar? (digite 'SIM' para confirmar): " -r
    if [[ ! $REPLY =~ ^SIM$ ]]; then
        log "Desinstala√ß√£o cancelada pelo usu√°rio."
        exit 0
    fi
    
    echo ""
    read -p "Deseja fazer backup do banco de dados antes de remover? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        BACKUP_DB=true
    fi
}

# Fun√ß√£o para fazer backup do banco
backup_database() {
    if [ "$BACKUP_DB" = true ]; then
        log "Fazendo backup do banco de dados..."
        
        BACKUP_FILE="just-dance-hub-backup-$(date +%Y%m%d-%H%M%S).sql"
        
        if sudo -u postgres pg_dump $DB_NAME > $BACKUP_FILE; then
            log "Backup criado: $BACKUP_FILE"
        else
            warn "Falha ao criar backup do banco de dados."
        fi
    fi
}

# Fun√ß√£o para parar e remover PM2
remove_pm2() {
    log "Removendo configura√ß√µes do PM2..."
    
    if command -v pm2 &> /dev/null; then
        # Parar aplica√ß√£o
        sudo -u $SERVICE_USER pm2 stop $APP_NAME 2>/dev/null || true
        sudo -u $SERVICE_USER pm2 delete $APP_NAME 2>/dev/null || true
        
        # Remover da lista de inicializa√ß√£o
        sudo -u $SERVICE_USER pm2 unstartup 2>/dev/null || true
        
        log "PM2 removido com sucesso!"
    else
        warn "PM2 n√£o encontrado."
    fi
}

# Fun√ß√£o para remover Nginx
remove_nginx() {
    log "Removendo configura√ß√µes do Nginx..."
    
    if [ -f "/etc/nginx/sites-enabled/$APP_NAME" ]; then
        sudo rm -f /etc/nginx/sites-enabled/$APP_NAME
        sudo rm -f /etc/nginx/sites-available/$APP_NAME
        sudo systemctl reload nginx
        log "Configura√ß√µes do Nginx removidas!"
    else
        log "Configura√ß√µes do Nginx n√£o encontradas."
    fi
}

# Fun√ß√£o para remover aplica√ß√£o
remove_application() {
    log "Removendo aplica√ß√£o..."
    
    if [ -d "$APP_DIR" ]; then
        sudo rm -rf $APP_DIR
        log "Aplica√ß√£o removida: $APP_DIR"
    else
        log "Diret√≥rio da aplica√ß√£o n√£o encontrado: $APP_DIR"
    fi
}

# Fun√ß√£o para remover usu√°rio do sistema
remove_system_user() {
    log "Removendo usu√°rio do sistema..."
    
    if id "$SERVICE_USER" &>/dev/null; then
        sudo userdel -r $SERVICE_USER 2>/dev/null || sudo userdel $SERVICE_USER
        log "Usu√°rio $SERVICE_USER removido."
    else
        log "Usu√°rio $SERVICE_USER n√£o encontrado."
    fi
}

# Fun√ß√£o para remover banco de dados
remove_database() {
    log "Removendo banco de dados..."
    
    if sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw $DB_NAME; then
        sudo -u postgres dropdb $DB_NAME
        log "Banco de dados $DB_NAME removido."
    else
        log "Banco de dados $DB_NAME n√£o encontrado."
    fi
}

# Fun√ß√£o para remover logs
remove_logs() {
    log "Removendo logs..."
    
    if [ -d "/var/log/$APP_NAME" ]; then
        sudo rm -rf /var/log/$APP_NAME
        log "Logs removidos: /var/log/$APP_NAME"
    else
        log "Diret√≥rio de logs n√£o encontrado."
    fi
}

# Fun√ß√£o para remover script de gerenciamento
remove_management_script() {
    log "Removendo script de gerenciamento..."
    
    if [ -f "/usr/local/bin/$APP_NAME" ]; then
        sudo rm -f /usr/local/bin/$APP_NAME
        log "Script de gerenciamento removido: /usr/local/bin/$APP_NAME"
    else
        log "Script de gerenciamento n√£o encontrado."
    fi
}

# Fun√ß√£o para limpar depend√™ncias (opcional)
cleanup_dependencies() {
    echo ""
    read -p "Deseja remover tamb√©m as depend√™ncias do sistema (Node.js, PostgreSQL, PM2, Nginx)? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        log "Removendo depend√™ncias do sistema..."
        
        # Remover PM2
        if command -v pm2 &> /dev/null; then
            sudo npm uninstall -g pm2
            log "PM2 removido."
        fi
        
        # Remover Node.js
        if command -v node &> /dev/null; then
            sudo apt remove -y nodejs
            sudo apt autoremove -y
            log "Node.js removido."
        fi
        
        # Remover PostgreSQL
        if command -v psql &> /dev/null; then
            sudo apt remove -y postgresql postgresql-contrib
            sudo apt autoremove -y
            log "PostgreSQL removido."
        fi
        
        # Remover Nginx
        if command -v nginx &> /dev/null; then
            sudo apt remove -y nginx
            sudo apt autoremove -y
            log "Nginx removido."
        fi
        
        log "Depend√™ncias do sistema removidas!"
    else
        log "Depend√™ncias do sistema mantidas."
    fi
}

# Fun√ß√£o para mostrar informa√ß√µes finais
show_final_info() {
    echo -e "${GREEN}"
    cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                   DESINSTALA√á√ÉO CONCLU√çDA!                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
    
    log "Just Dance Event Hub foi removido com sucesso!"
    
    if [ "$BACKUP_DB" = true ] && [ -f "$BACKUP_FILE" ]; then
        echo ""
        echo -e "${BLUE}üì¶ Backup criado:${NC}"
        echo "  ‚Ä¢ Arquivo: $BACKUP_FILE"
        echo "  ‚Ä¢ Para restaurar: sudo -u postgres createdb $DB_NAME && sudo -u postgres psql $DB_NAME < $BACKUP_FILE"
    fi
    
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE:${NC}"
    echo "  ‚Ä¢ Verifique se n√£o h√° outros servi√ßos dependentes"
    echo "  ‚Ä¢ Monitore o sistema por alguns dias"
    echo "  ‚Ä¢ Se necess√°rio, reinicie o servidor"
    
    echo ""
    log "Desinstala√ß√£o conclu√≠da!"
}

# Fun√ß√£o principal
main() {
    log "Iniciando desinstala√ß√£o do Just Dance Event Hub..."
    
    confirm_uninstall
    backup_database
    remove_pm2
    remove_nginx
    remove_application
    remove_system_user
    remove_database
    remove_logs
    remove_management_script
    cleanup_dependencies
    show_final_info
}

# Executar fun√ß√£o principal
main "$@" 